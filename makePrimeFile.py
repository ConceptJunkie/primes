#!/usr/bin/env python

from bitarray import bitarray
import os

from primeDataUtils import outputDirectory, readPrimeDataFiles

offsetArray = {
    1   : 0,        3   : 1,        7   : 2,        9   : 3,        13  : 4,
    19  : 5,        21  : 6,        27  : 7,        31  : 8,        33  : 9,
    37  : 10,       43  : 11,       49  : 12,       51  : 13,       57  : 14,
    61  : 15,       63  : 16,       69  : 17,       73  : 18,       79  : 19,
    87  : 20,       91  : 21,       93  : 22,       97  : 23,       99  : 24,
    103 : 25,       111 : 26,       117 : 27,       121 : 28,       127 : 29,
    129 : 30,       133 : 31,       139 : 32,       141 : 33,       147 : 34,
    153 : 35,       157 : 36,       159 : 37,       163 : 38,       169 : 39,
    171 : 40,       177 : 41,       181 : 42,       183 : 43,       187 : 44,
    189 : 45,       199 : 46,       201 : 47,
}

offsetArray2 = {
    1  : 0,
    5  : 1,
    7  : 2,
    11 : 3,
    17 : 4,
    19 : 5,
    25 : 6,
    29 : 7,
    31 : 8,
    35 : 9,
    41 : 10,
    47 : 11,
    49 : 12,
    55 : 13,
    59 : 14,
    61 : 15,
    67 : 16,
    71 : 17,
    77 : 18,
    85 : 19,
    89 : 20,
    91 : 21,
    95 : 22,
    97 : 23,
    101 : 24,
    115 : 25,
    119 : 26,
    125 : 27,
    127 : 28,
    137 : 29,
    139 : 30,
    145 : 31,
    151 : 32,
    155 : 33,
    157 : 34,
    161 : 35,
    167 : 36,
    169 : 37,
    179 : 38,
    181 : 39,
    185 : 40,
    187 : 41,
    199 : 42,
    209 : 43,
    211 : 44,
    215 : 45,
    217 : 46,
    221 : 47,
    227 : 48,
    229 : 49,
    235 : 50,
    239 : 51,
    245 : 52,
    251 : 53,
    257 : 54,
    259 : 55,
    265 : 56,
    269 : 57,
    271 : 58,
    277 : 59,
    281 : 60,
    287 : 61,
    295 : 62,
    299 : 63,
    301 : 64,
    305 : 65,
    311 : 66,
    319 : 67,
    325 : 68,
    335 : 69,
    337 : 70,
    341 : 71,
    347 : 72,
    349 : 73,
    355 : 74,
    361 : 75,
    365 : 76,
    367 : 77,
    371 : 78,
    377 : 79,
    379 : 80,
    385 : 81,
    389 : 82,
    391 : 83,
    397 : 84,
    407 : 85,
    409 : 86,
    419 : 87,
    421 : 88,
    425 : 89,
    427 : 90,
    431 : 91,
    437 : 92,
    445 : 93,
    449 : 94,
    451 : 95,
    455 : 96,
    467 : 97,
    469 : 98,
    475 : 99,
    479 : 100,
    481 : 101,
    487 : 102,
    491 : 103,
    497 : 104,
    509 : 105,
    511 : 106,
    515 : 107,
    517 : 108,
    521 : 109,
    529 : 110,
    535 : 111,
    539 : 112,
    545 : 113,
    547 : 114,
    551 : 115,
    557 : 116,
    559 : 117,
    565 : 118,
    575 : 119,
    577 : 120,
    581 : 121,
    587 : 122,
    589 : 123,
    595 : 124,
    599 : 125,
    601 : 126,
    605 : 127,
    607 : 128,
    617 : 129,
    619 : 130,
    629 : 131,
    631 : 132,
    635 : 133,
    641 : 134,
    647 : 135,
    649 : 136,
    655 : 137,
    661 : 138,
    665 : 139,
    671 : 140,
    677 : 141,
    679 : 142,
    685 : 143,
    689 : 144,
    691 : 145,
    697 : 146,
    701 : 147,
    707 : 148,
    715 : 149,
    719 : 150,
    721 : 151,
    727 : 152,
    731 : 153,
    739 : 154,
    745 : 155,
    749 : 156,
    755 : 157,
    757 : 158,
    761 : 159,
    767 : 160,
    775 : 161,
    781 : 162,
    785 : 163,
    787 : 164,
    797 : 165,
    799 : 166,
    805 : 167,
    809 : 168,
    811 : 169,
    815 : 170,
    817 : 171,
    827 : 172,
    829 : 173,
    839 : 174,
    841 : 175,
    845 : 176,
    847 : 177,
    851 : 178,
    859 : 179,
    865 : 180,
    869 : 181,
    871 : 182,
    875 : 183,
    881 : 184,
    887 : 185,
    889 : 186,
    895 : 187,
    899 : 188,
    907 : 189,
    911 : 190,
    917 : 191,
    925 : 192,
    929 : 193,
    931 : 194,
    935 : 195,
    937 : 196,
    941 : 197,
    949 : 198,
    955 : 199,
    959 : 200,
    965 : 201,
    971 : 202,
    977 : 203,
    979 : 204,
    985 : 205,
    991 : 206,
    995 : 207,
    997 : 208,
    1001 : 209,
    1007 : 210,
    1009 : 211,
    1015 : 212,
    1019 : 213,
    1021 : 214,
    1025 : 215,
    1027 : 216,
    1037 : 217,
    1039 : 218,
    1049 : 219,
    1051 : 220,
    1057 : 221,
    1061 : 222,
    1067 : 223,
    1069 : 224,
    1075 : 225,
    1079 : 226,
    1081 : 227,
    1085 : 228,
    1091 : 229,
    1097 : 230,
    1105 : 231,
    1109 : 232,
    1111 : 233,
    1117 : 234,
    1127 : 235,
    1135 : 236,
    1139 : 237,
    1141 : 238,
    1145 : 239,
    1147 : 240,
    1151 : 241,
    1159 : 242,
    1169 : 243,
    1175 : 244,
    1177 : 245,
    1181 : 246,
    1189 : 247,
    1195 : 248,
    1201 : 249,
    1205 : 250,
    1207 : 251,
    1211 : 252,
    1217 : 253,
    1219 : 254,
    1225 : 255,
    1229 : 256,
    1235 : 257,
    1237 : 258,
    1247 : 259,
    1249 : 260,
    1259 : 261,
    1261 : 262,
    1265 : 263,
    1267 : 264,
    1271 : 265,
    1277 : 266,
    1279 : 267,
    1285 : 268,
    1289 : 269,
    1291 : 270,
    1295 : 271,
    1301 : 272,
    1307 : 273,
    1309 : 274,
    1315 : 275,
    1321 : 276,
    1327 : 277,
    1331 : 278,
    1337 : 279,
    1345 : 280,
    1349 : 281,
    1351 : 282,
    1355 : 283,
    1357 : 284,
    1361 : 285,
    1369 : 286,
    1375 : 287,
    1379 : 288,
    1387 : 289,
    1391 : 290,
    1397 : 291,
    1399 : 292,
    1405 : 293,
    1411 : 294,
    1415 : 295,
    1417 : 296,
    1421 : 297,
    1427 : 298,
    1435 : 299,
    1439 : 300,
    1441 : 301,
    1445 : 302,
    1447 : 303,
    1457 : 304,
    1459 : 305,
    1469 : 306,
    1471 : 307,
    1475 : 308,
    1477 : 309,
    1481 : 310,
    1487 : 311,
    1489 : 312,
    1499 : 313,
    1501 : 314,
    1505 : 315,
    1511 : 316,
    1519 : 317,
    1525 : 318,
    1529 : 319,
    1531 : 320,
    1537 : 321,
    1541 : 322,
    1547 : 323,
    1555 : 324,
    1559 : 325,
    1565 : 326,
    1567 : 327,
    1571 : 328,
    1579 : 329,
    1585 : 330,
    1589 : 331,
    1595 : 332,
    1597 : 333,
    1601 : 334,
    1607 : 335,
    1609 : 336,
    1615 : 337,
    1621 : 338,
    1625 : 339,
    1631 : 340,
    1637 : 341,
    1639 : 342,
    1645 : 343,
    1651 : 344,
    1655 : 345,
    1657 : 346,
    1667 : 347,
    1669 : 348,
    1679 : 349,
    1681 : 350,
    1685 : 351,
    1687 : 352,
    1691 : 353,
    1697 : 354,
    1699 : 355,
    1705 : 356,
    1709 : 357,
    1711 : 358,
    1721 : 359,
    1727 : 360,
    1729 : 361,
    1735 : 362,
    1739 : 363,
    1741 : 364,
    1747 : 365,
    1751 : 366,
    1757 : 367,
    1765 : 368,
    1769 : 369,
    1771 : 370,
    1775 : 371,
    1777 : 372,
    1789 : 373,
    1795 : 374,
    1799 : 375,
    1805 : 376,
    1807 : 377,
    1811 : 378,
    1817 : 379,
    1819 : 380,
    1831 : 381,
    1835 : 382,
    1837 : 383,
    1841 : 384,
    1849 : 385,
    1855 : 386,
    1859 : 387,
    1861 : 388,
    1865 : 389,
    1867 : 390,
    1877 : 391,
    1879 : 392,
    1889 : 393,
    1895 : 394,
    1897 : 395,
    1901 : 396,
    1907 : 397,
    1909 : 398,
    1915 : 399,
    1919 : 400,
    1921 : 401,
    1925 : 402,
    1931 : 403,
    1937 : 404,
    1939 : 405,
    1945 : 406,
    1949 : 407,
    1951 : 408,
    1961 : 409,
    1967 : 410,
    1975 : 411,
    1981 : 412,
    1985 : 413,
    1987 : 414,
    1991 : 415,
    1999 : 416,
    2005 : 417,
    2009 : 418,
    2015 : 419,
    2017 : 420,
    2021 : 421,
    2027 : 422,
    2029 : 423,
    2035 : 424,
    2041 : 425,
    2047 : 426,
    2051 : 427,
    2057 : 428,
    2059 : 429,
    2065 : 430,
    2069 : 431,
    2071 : 432,
    2075 : 433,
    2077 : 434,
    2087 : 435,
    2099 : 436,
    2101 : 437,
    2105 : 438,
    2107 : 439,
    2117 : 440,
    2119 : 441,
    2125 : 442,
    2129 : 443,
    2131 : 444,
    2135 : 445,
    2141 : 446,
    2147 : 447,
    2149 : 448,
    2159 : 449,
    2161 : 450,
    2167 : 451,
    2171 : 452,
    2185 : 453,
    2189 : 454,
    2191 : 455,
    2195 : 456,
    2197 : 457,
    2201 : 458,
    2209 : 459,
    2215 : 460,
    2219 : 461,
    2225 : 462,
    2227 : 463,
    2231 : 464,
    2237 : 465,
    2239 : 466,
    2245 : 467,
    2251 : 468,
    2255 : 469,
    2257 : 470,
    2261 : 471,
    2267 : 472,
    2269 : 473,
    2275 : 474,
    2279 : 475,
    2281 : 476,
    2285 : 477,
    2297 : 478,
    2299 : 479,
}


#//******************************************************************************
#//
#//  main
#//
#//******************************************************************************

def main( ):
    firstDataFile = 0
    lastDataFile = 950

    outputInterval = 100
    printInterval = 100000

    print( )

    chunkSize = 2310

    marker = chunkSize + 12

    primesFile = open( 'primes.bin', 'wb' )

    primeData = bitarray( 480 )
    primeData[ 0 : ] = False

    for index, prime in readPrimeDataFiles( firstDataFile, lastDataFile ):
        if index % printInterval == 0:
            print( '\r{:,}'.format( index ), end='' )

        if prime < 12:
            continue
        elif prime > marker:
            #print( primeData.to01( ), marker )
            primeData.tofile( primesFile )
            primeData[ 0 : ] = False

            while prime > marker:
                marker += chunkSize

        #print( 'index', index, 'prime', prime, 'offset', offsetArray[ ( prime - 10 ) % chunkSize ] )
        primeData[ offsetArray2[ ( prime - 12 ) % chunkSize ] ] = True

    primesFile.close( )


#//******************************************************************************
#//
#//  __main__
#//
#//******************************************************************************

if __name__ == '__main__':
    try:
        main( )
    except KeyboardInterrupt:
        pass


